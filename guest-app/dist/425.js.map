{"version":3,"file":"425.js","sources":["webpack://guest-app/./src/App.js","webpack://guest-app/./src/LocalButton.js","webpack://guest-app/./src/bootstrap.js","webpack://guest-app/./src/popover.js"],"sourcesContent":["import LocalButton from './LocalButton';\nimport React from 'react';\nimport {Alert, canvasHighContrast, InstUISettingsProvider} from \"@instructure/ui\";\nimport {PopoverSample} from \"./popover\";\n\nconst App = () => (\n    <InstUISettingsProvider theme={canvasHighContrast}>\n        <div style={{ border: '1px red solid' }} data-e2e=\"SHARED__REACT_BLOCK\">\n        <h1>Guest Application - React Version {React.version}</h1>\n        <h2>InstUI v10</h2>\n        <LocalButton />\n        <Alert variant=\"warning\">Alert in the guest app.</Alert>\n          <PopoverSample />\n        </div>\n    </InstUISettingsProvider>\n);\n\nconsole.log(globalThis.aaa) // pierces federation\nconst para = document.createElement(\"p\");\nconst node = document.createTextNode(\"This is from guest app.\");\npara.appendChild(node);\nconst element = document.getElementById(\"footer\");\nelement.appendChild(para);\n\nexport default App;\n","import React from 'react';\n\nconst LocalButton = () => <button>Guest app Button</button>;\n\nexport default LocalButton;\n","import App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport {Button, CloseButton, FormFieldGroup, Popover, TextInput, View} from \"@instructure/ui\";\n\n\nexport class PopoverSample extends React.Component {\n\n    state = {\n        isShowingContent: false\n    }\n\n    renderCloseButton () {\n        return (\n            <CloseButton\n                placement=\"end\"\n                offset=\"small\"\n                onClick={() => this.setState({ isShowingContent: false })}\n                screenReaderLabel=\"Close\"\n            />\n        )\n    }\n\n    render () {\n        return (\n            <View>\n                <Popover\n                    renderTrigger={<Button>Guest app -- open Popover</Button>}\n                    isShowingContent={this.state.isShowingContent}\n                    onShowContent={(e) => {\n                        this.setState({ isShowingContent: true })\n                    }}\n                    onHideContent={(e, { _documentClick }) => {\n                        this.setState({ isShowingContent: false })\n                    }}\n                    on=\"click\"\n                    screenReaderLabel=\"Popover Dialog Example\"\n                    shouldContainFocus\n                    shouldReturnFocus\n                    shouldCloseOnDocumentClick\n                    offsetY=\"16px\"\n                    //mountNode={() => document.getElementById('main')}\n                >\n                    <View padding=\"medium\" display=\"block\" as=\"form\">\n                        {this.renderCloseButton()}\n                        <FormFieldGroup description=\"Log In\">\n                            <TextInput renderLabel=\"Username\" inputRef={\n                                (el) => {\n                                    if (el) {\n                                        this._username = el\n                                    }\n                                }}/>\n                            <TextInput renderLabel=\"Password\" type=\"password\" />\n                        </FormFieldGroup>\n                    </View>\n                </Popover>\n            </View>\n        )\n    }\n}\n"],"names":["console","log","globalThis","aaa","para","document","createElement","node","createTextNode","appendChild","element","getElementById","InstUISettingsProvider","theme","canvasHighContrast","style","border","React","LocalButton","Alert","variant","PopoverSample","ReactDOM","App","isShowingContent","renderCloseButton","CloseButton","placement","offset","onClick","setState","screenReaderLabel","render","View","Popover","renderTrigger","Button","state","onShowContent","e","onHideContent","_documentClick","on","shouldContainFocus","shouldReturnFocus","shouldCloseOnDocumentClick","offsetY","padding","display","as","FormFieldGroup","description","TextInput","renderLabel","inputRef","el","_username","type"],"mappings":"uLAiBAA,QAAQC,GAAG,CAACC,WAAWC,GAAG,EAC1B,IAAMC,EAAOC,SAASC,aAAa,CAAC,KAC9BC,EAAOF,SAASG,cAAc,CAAC,2BACrCJ,EAAKK,WAAW,CAACF,GAEjBG,AADgBL,SAASM,cAAc,CAAC,UAChCF,WAAW,CAACL,GAEpB,IAnBY,W,MACR,UAACQ,EAAAA,CAAsBA,CAAAA,CAACC,MAAOC,EAAAA,CAAkBA,C,SAC7C,WAAC,OAAIC,MAAO,CAAEC,OAAQ,eAAgB,EAAG,WAAS,sB,UAClD,WAAC,M,UAAG,qCAAmCC,EAAAA,OAAa,C,GACpD,UAAC,M,SAAG,Y,GACJ,UAACC,EAAAA,CAAWA,CAAAA,CAAAA,GACZ,UAACC,EAAAA,CAAKA,CAAAA,CAACC,QAAQ,U,SAAU,yB,GACvB,UAACC,EAAAA,CAAaA,CAAAA,CAAAA,G,iDCRxB,KAFoB,W,MAAM,UAAC,U,SAAO,kB,iECElCC,A,OAAAA,MAAe,CAAC,UAACC,EAAAA,CAAGA,CAAAA,CAAAA,GAAKlB,SAASM,cAAc,CAAC,Q,ooBCA1C,IAAMU,EAAN,a,+NAAMA,EAAAA,G,mBAAAA,E,ygBAAAA,Q,6GAAAA,G,4BAET,K,EAAQ,CACJG,iBAAkB,EACtB,E,GAFA,W,mGAFSH,E,EAAAA,C,CAMTI,IAAAA,oB,MAAAA,W,WACI,MACI,UAACC,EAAAA,CAAWA,CAAAA,CACRC,UAAU,MACVC,OAAO,QACPC,QAAS,W,OAAM,EAAKC,QAAQ,CAAC,CAAEN,iBAAkB,EAAM,E,EACvDO,kBAAkB,O,EAG9B,C,GAEAC,IAAAA,S,MAAAA,W,WACI,MACI,UAACC,EAAAA,CAAIA,CAAAA,C,SACD,UAACC,EAAAA,CAAOA,CAAAA,CACJC,cAAe,UAACC,EAAAA,CAAMA,CAAAA,C,SAAC,2B,GACvBZ,iBAAkB,IAAI,CAACa,KAAK,CAACb,gBAAgB,CAC7Cc,cAAe,SAACC,CAAC,EACb,EAAKT,QAAQ,CAAC,CAAEN,iBAAkB,EAAK,EAC3C,EACAgB,cAAe,SAACD,CAAC,CAAE,CAAHA,EAAKE,EAAAA,cAAc,CAC/B,EAAKX,QAAQ,CAAC,CAAEN,iBAAkB,EAAM,EAC5C,EACAkB,GAAG,QACHX,kBAAkB,yBAClBY,mBAAkB,GAClBC,kBAAiB,GACjBC,2BAA0B,GAC1BC,QAAQ,O,SAGR,WAACb,EAAAA,CAAIA,CAAAA,CAACc,QAAQ,SAASC,QAAQ,QAAQC,GAAG,O,UACrC,IAAI,CAACxB,iBAAiB,GACvB,WAACyB,EAAAA,EAAcA,CAAAA,CAACC,YAAY,S,UACxB,UAACC,EAAAA,CAASA,CAAAA,CAACC,YAAY,WAAWC,SAC9B,SAACC,CAAE,EACKA,GACA,GAAKC,SAAS,CAAGD,CAAC,CAE1B,C,GACJ,UAACH,EAAAA,CAASA,CAAAA,CAACC,YAAY,WAAWI,KAAK,U,YAM/D,C,oBApDSpC,C,EAAsBJ,EAAAA,SAAe,C"}